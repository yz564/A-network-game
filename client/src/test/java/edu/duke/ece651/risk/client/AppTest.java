/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.duke.ece651.risk.client;

import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

import edu.duke.ece651.risk.shared.*;

import static org.mockito.Mockito.*;

import java.io.BufferedReader;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintStream;
import java.io.StringReader;

class AppTest {
    @Test
    void test_tryConnect() {
      try{
      App myApp=new App();
      myApp.initializeApp(null, null, null, null);
      myApp.deleteJoinedRoomId(0);
      myApp.getPlayer();
      myApp.getMessenger();
      myApp.setListener(null);
      myApp.tryConnect("localhost");
    } catch (Exception e) {
    }
    }
  @Test
    void test_selectTerritory() {
      try{
        App myApp=new App(null,null,null,null);
      myApp.trySelectTerritory(null);
    } catch (Exception e) {
    }
    }
  @Test
    void test_checkIn() {
      try{
        App myApp=new App(null,null,null,null);
      myApp.checkIn();
    } catch (Exception e) {
    }
    }
  @Test
    void test_requestLeave() {
      try{
        App myApp=new App();
      myApp.initializeApp(null, null, null, null);
      myApp.requestLeave();
    } catch (Exception e) {
    }
    }
  @Test
    void test_receiveMessage() {
      try{
        App myApp=new App(null,null,null,null);
      myApp.receiveMessage();
    } catch (Exception e) {
    }
    }
  @Test
    void test_sendMessage() {
      try{
        App myApp=new App(null,null,null,null);
      myApp.sendMessage(null);
    } catch (Exception e) {
    }
    }
  @Test
    void test_tryLogin() {
      try{
        App myApp=new App(null,null,null,null);
      myApp.tryLogin(null, null);
    } catch (Exception e) {
    }
    }
  @Test
    void test_tryJoinRoom() {
      try{
        App myApp=new App(null,null,null,null);
      myApp.tryJoinRoom(0);
    } catch (Exception e) {
    }
    }
  @Test
    void test_checkGUIUpdate() {
      try{
        App myApp=new App(null,null,null,null);
      myApp.checkGUIUpdate();
    } catch (Exception e) {
    }
    }
}









    @Disabled
    @Test
    public void test_try_connect() {
        App app = new App();
        String connect = app.tryConnect("localhost");
        assertEquals(null, connect);

        app = new App();
        connect = app.tryConnect("incorrect server address");
        assertEquals(true, connect.equals("Server address does not exist!"));
    }

    @Disabled
    @Test
    public void test_login() throws Exception {
        App app = new App();
        String connect = app.tryConnect("localhost");
        Boolean login = app.tryLogin("Bots101", "101");
        assertEquals(true, login);

        app = new App();
        connect = app.tryConnect("localhost");
        login = app.tryLogin("Incorrect Username", "1");
        assertEquals(false, login);
    }

    @Test
    public void test_checkin() throws Exception {
        App app = new App();
        String connect = app.tryConnect("localhost");
        Boolean login = app.tryLogin("Bots102", "102");
        Boolean checkin = app.checkIn();
        assertEquals(true, checkin);
        app.requestLeave();
        checkin = app.checkIn();
        assertEquals(false, checkin);
    }

    @Disabled
    @Test
    public void test_join_room() throws Exception {
        App app = new App();
        app.tryConnect("localhost");
        app.tryLogin("Bots103", "103");
        app.checkIn();
        Boolean success = app.tryJoinRoom(1);
        assertEquals(true, success);

        App app2 = new App();
        app2.tryConnect("localhost");
        app2.tryLogin("Bots104", "104");
        app2.checkIn();
        Boolean success2 = app2.tryJoinRoom(1);
        assertEquals(true, success2);

        App app3 = new App();
        app3.tryConnect("localhost");
        app3.tryLogin("Bots105", "105");
        app3.checkIn();
        Boolean success3 = app3.tryJoinRoom(1);
        assertEquals(false, success3);
    }

    @Test
    public void test_leave() throws Exception {
        App app = new App();
        String connect = app.tryConnect("localhost");
        Boolean login = app.tryLogin("Bots106", "106");
        Boolean checkin = app.checkIn();
        app.requestLeave();
        checkin = app.checkIn();
        assertEquals(false, checkin);
    }
}